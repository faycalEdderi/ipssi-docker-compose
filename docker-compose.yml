version: "3.8"

services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: ../docker/frontend.dockerfile
  #   env_file:
  #     - ./docker/frontend.env
  #   ports:
  #     - "8080:80" # Frontend exposé sur le port 8080
  #   environment:
  #     - VUE_APP_BACKEND_URL=http://backend:3000
  #   depends_on:
  #     - backend

  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: ../docker/backend.dockerfile
  #   env_file:
  #     - ./docker/backend.env
  #   ports:
  #     - "3000:8000" # Backend exposé sur le port 3000
  #   environment:
  #     - DATABASE_URL=postgres://postgres:postgres@postgres:5432/mydatabase
  #   depends_on:
  #     - postgres

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file: ./docker/postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # PostgreSQL accessible sur le port 5432
    networks:
      - my_bridge_network

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./docker/pgadmin.env
    ports:
      - "5050:80" # PgAdmin accessible sur le port 5050
    depends_on:
      - postgres
    networks:
      - my_bridge_network
    volumes:
      - ./docker/pgadmin_servers.json:/pgadmin4/servers.json

volumes:
  postgres_data:

networks:
  my_bridge_network:
    driver: bridge
